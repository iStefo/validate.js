{"version":3,"sources":["validate.es6.js"],"names":[],"mappings":"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","file":"validate.es6.js","sourcesContent":["// minature functional helpers\nconst _ = {\n  get: function get(key) {\n    return function(obj) {\n      return obj[key];\n    };\n  },\n  not: function not(val) {\n    return !val;\n  },\n  // underscore.js compose function\n  compose: function compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) {\n        result = args[i].call(this, result);\n      }\n      return result;\n    };\n  },\n  pairs: function pairs(obj) {\n    return Object.keys(obj).map((key) => [key, obj[key]]);\n  }\n};\n\n// extend the JavaScript Array with a flatMap method:\n// see https://gist.github.com/samgiles/762ee337dff48623e729\nObject.defineProperty(Array.prototype, \"flatMap\", {\n  value: function (fn) {\n    return Array.prototype.concat.apply([], this.map(fn));\n  }\n});\n\n// extend the JavaScript Array with a pluck method:\nObject.defineProperty(Array.prototype, \"pluck\", {\n  value: function(key) {\n    return this.map(_.get(key));\n  }\n});\n\n// extend the JavaScript Array with the opposite of the filter method\nObject.defineProperty(Array.prototype, \"reject\", {\n  value: function(pred) {\n    return this.filter(_.compose(_.not, pred));\n  }\n});\n\n\n//     Validate.js 0.7.1\n\n//     (c) 2013-2015 Nicklas Ansman, 2013 Wrapp\n//     Validate.js may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://validatejs.org/\n\n(function(exports, module, define) {\n  \"use strict\";\n\n  // The main function that calls the validators specified by the constraints.\n  // The options are the following:\n  //   - format (string) - An option that controls how the returned value is formatted\n  //     * flat - Returns a flat array of just the error messages\n  //     * grouped - Returns the messages grouped by attribute (default)\n  //     * detailed - Returns an array of the raw validation data\n  //   - fullMessages (boolean) - If `true` (default) the attribute name is prepended to the error.\n  //\n  // Please note that the options are also passed to each validator.\n  var validate = function(attributes, constraints, options) {\n    options = v.extend({}, v.options, options);\n\n    var results = v.runValidations(attributes, constraints, options),\n      attr,\n      validator;\n\n    for (attr in results) {\n      for (validator in results[attr]) {\n        if (v.isPromise(results[attr][validator])) {\n          throw new Error(\"Use validate.async if you want support for promises\");\n        }\n      }\n    }\n    return v.processValidationResults(results, options);\n  };\n\n  var v = validate;\n\n  // Copies over attributes from one or more sources to a single destination.\n  // Very much similar to underscore's extend.\n  // The first argument is the target object and the remaining arguments will be\n  // used as targets.\n  v.extend = function(obj) {\n    [].slice.call(arguments, 1).forEach(function(source) {\n      for (var attr in source) {\n        obj[attr] = source[attr];\n      }\n    });\n    return obj;\n  };\n\n  v.extend(validate, {\n    // This is the version of the library as a semver.\n    // The toString function will allow it to be coerced into a string\n    version: {\n      major: 0,\n      minor: 7,\n      patch: 1,\n      metadata: \"development\",\n      toString: function() {\n        var version = v.format(\"%{major}.%{minor}.%{patch}\", v.version);\n        if (!v.isEmpty(v.version.metadata)) {\n          version += \"+\" + v.version.metadata;\n        }\n        return version;\n      }\n    },\n\n    // Below is the dependencies that are used in validate.js\n\n    // The constructor of the Promise implementation.\n    // If you are using Q.js, RSVP or any other A+ compatible implementation\n    // override this attribute to be the constructor of that promise.\n    // Since jQuery promises aren't A+ compatible they won't work.\n    Promise: typeof Promise !== \"undefined\" ? Promise : /* istanbul ignore next */ null,\n\n    // If moment is used in node, browserify etc please set this attribute\n    // like this: `validate.moment = require(\"moment\");\n    moment: typeof moment !== \"undefined\" ? moment : /* istanbul ignore next */ null,\n\n    XDate: typeof XDate !== \"undefined\" ? XDate : /* istanbul ignore next */ null,\n\n    EMPTY_STRING_REGEXP: /^\\s*$/,\n\n    // Runs the validators specified by the constraints object.\n    // Will return an array of the format:\n    //     [{attribute: \"<attribute name>\", error: \"<validation result>\"}, ...]\n    // NOTE: REFACTORED\n    runValidations: function(hash, constraints, options) {\n      if (v.isDomElement(hash)) {\n        hash = v.collectFormValues(hash);\n      }\n\n      // For every entry in constraints...\n      return _.pairs(constraints)\n        // ...create a tuple of the attribute name, the corresponding constraint and the attribute value...\n        .map(function getAttributeValue([attribute, constraint]) {\n          return {\n            attribute,\n            constraint,\n            value: v.getDeepObjectValue(hash, attribute)\n          };\n        })\n        // ...and concat all the constraint's results.\n        .flatMap(function evaluateConstraintsForAttribute({attribute, constraint, value}) {\n          // allow `constraint` to be a function returning the actual constraint\n          const validatorsForAttr = v.result(constraint, value, hash, attribute, options, constraints);\n\n          // For every validator name and speicification assigned to the current attribute...\n          return _.pairs(validatorsForAttr)\n            // ...fetch the actual validator options and validation function\n            .map(function getValidatorOptions([name, validator]) {\n              return {\n                name,\n                // allow `validator` to be a function returning the actual validator options\n                validatorOptions: v.result(validator, value, hash, attribute, options, constraints),\n                // the validator function is so critical an error will be thrown if not found\n                validatorFn: v.validators[name] || (() => { throw new Error(`Unknown validator ${name}`); })()\n              };\n            })\n            // Leave out validators that have falsy options\n            .filter(_.compose(Boolean, _.get('validatorOptions')))\n            // Finally, execute every validator and return the result object\n            // which may contain an error (but doesn't have to)\n            .map(function runValidation({name, validatorOptions, validatorFn}) {\n              return {\n                attribute,\n                value,\n                validator: name,\n                options:   validatorOptions,\n                error:     validatorFn.call(validatorFn, value, validatorOptions, attribute, hash)\n              };\n            });\n        });\n    },\n\n    // Takes the output from runValidations and converts it to the correct\n    // output format.\n    processValidationResults: function(errors, options) {\n      var attr;\n\n      errors = v.pruneEmptyErrors(errors, options);\n      errors = v.expandMultipleErrors(errors, options);\n      errors = v.convertErrorMessages(errors, options);\n\n      switch (options.format || \"grouped\") {\n        case \"detailed\":\n          // Do nothing more to the errors\n          break;\n\n        case \"flat\":\n          errors = v.flattenErrorsToArray(errors);\n          break;\n\n        case \"grouped\":\n          errors = v.groupErrorsByAttribute(errors);\n          for (attr in errors) {\n            errors[attr] = v.flattenErrorsToArray(errors[attr]);\n          }\n          break;\n\n        default:\n          throw new Error(v.format(\"Unknown format %{format}\", options));\n      }\n\n      return v.isEmpty(errors) ? undefined : errors;\n    },\n\n    // Runs the validations with support for promises.\n    // This function will return a promise that is settled when all the\n    // validation promises have been completed.\n    // It can be called even if no validations returned a promise.\n    async: function(attributes, constraints, options) {\n      options = v.extend({}, v.async.options, options);\n\n      // Removes unknown attributes\n      if (options.cleanAttributes !== false) {\n        attributes = v.cleanAttributes(attributes, constraints);\n      }\n\n      var results = v.runValidations(attributes, constraints, options);\n\n      return new v.Promise(function(resolve, reject) {\n        v.waitForResults(results).then(function() {\n          var errors = v.processValidationResults(results, options);\n          if (errors) {\n            reject(errors);\n          } else {\n            resolve(attributes);\n          }\n        }, function(err) {\n          reject(err);\n        });\n      });\n    },\n\n    single: function(value, constraints, options) {\n      options = v.extend({}, v.single.options, options, {\n        format: \"flat\",\n        fullMessages: false\n      });\n      return v({single: value}, {single: constraints}, options);\n    },\n\n    // Returns a promise that is resolved when all promises in the results array\n    // are settled. The promise returned from this function is always resolved,\n    // never rejected.\n    // This function modifies the input argument, it replaces the promises\n    // with the value returned from the promise.\n    waitForResults: function(results) {\n      // Create a sequence of all the results starting with a resolved promise.\n      return results\n        // If this result isn't a promise skip it in the sequence.\n        // NOTE: REFACTORED\n        .filter(_.compose(v.isPromise, _.get('error')))\n        .reduce(function(memo, result) {\n          return memo.then(function() {\n            return result.error.then(\n              function() {\n                result.error = null;\n              },\n              function(error) {\n                // If for some reason the validator promise was rejected but no\n                // error was specified.\n                if (!error) {\n                  v.warn(\"Validator promise was rejected but didn't return an error\");\n                } else if (error instanceof Error) {\n                  throw error;\n                }\n                result.error = error;\n              }\n            );\n          });\n        }, new v.Promise(function(r) { r(); })); // A resolved promise\n    },\n\n    // If the given argument is a call: function the and: function return the value\n    // otherwise just return the value. Additional arguments will be passed as\n    // arguments to the function.\n    // Example:\n    // ```\n    // result('foo') // 'foo'\n    // result(Math.max, 1, 2) // 2\n    // ```\n    result: function(value) {\n      var args = [].slice.call(arguments, 1);\n      if (typeof value === 'function') {\n        value = value.apply(null, args);\n      }\n      return value;\n    },\n\n    // Checks if the value is a number. This function does not consider NaN a\n    // number like many other `isNumber` functions do.\n    isNumber: function(value) {\n      return typeof value === 'number' && !isNaN(value);\n    },\n\n    // Returns false if the object is not a function\n    isFunction: function(value) {\n      return typeof value === 'function';\n    },\n\n    // A simple check to verify that the value is an integer. Uses `isNumber`\n    // and a simple modulo check.\n    isInteger: function(value) {\n      return v.isNumber(value) && value % 1 === 0;\n    },\n\n    // Uses the `Object` function to check if the given argument is an object.\n    isObject: function(obj) {\n      return obj === Object(obj);\n    },\n\n    // Simply checks if the object is an instance of a date\n    isDate: function(obj) {\n      return obj instanceof Date;\n    },\n\n    // Returns false if the object is `null` of `undefined`\n    isDefined: function(obj) {\n      return obj !== null && obj !== undefined;\n    },\n\n    // Checks if the given argument is a promise. Anything with a `then`\n    // function is considered a promise.\n    isPromise: function(p) {\n      return !!p && v.isFunction(p.then);\n    },\n\n    isDomElement: function(o) {\n      if (!o) {\n        return false;\n      }\n\n      if (!v.isFunction(o.querySelectorAll) || !v.isFunction(o.querySelector)) {\n        return false;\n      }\n\n      if (v.isObject(document) && o === document) {\n        return true;\n      }\n\n      // http://stackoverflow.com/a/384380/699304\n      /* istanbul ignore else */\n      if (typeof HTMLElement === \"object\") {\n        return o instanceof HTMLElement;\n      } else {\n        return o &&\n          typeof o === \"object\" &&\n          o !== null &&\n          o.nodeType === 1 &&\n          typeof o.nodeName === \"string\";\n      }\n    },\n\n    isEmpty: function(value) {\n      var attr;\n\n      // Null and undefined are empty\n      if (!v.isDefined(value)) {\n        return true;\n      }\n\n      // functions are non empty\n      if (v.isFunction(value)) {\n        return false;\n      }\n\n      // Whitespace only strings are empty\n      if (v.isString(value)) {\n        return v.EMPTY_STRING_REGEXP.test(value);\n      }\n\n      // For arrays we use the length property\n      if (v.isArray(value)) {\n        return value.length === 0;\n      }\n\n      // Dates have no attributes but aren't empty\n      if (v.isDate(value)) {\n        return false;\n      }\n\n      // If we find at least one property we consider it non empty\n      if (v.isObject(value)) {\n        for (attr in value) {\n          return false;\n        }\n        return true;\n      }\n\n      return false;\n    },\n\n    // Formats the specified strings with the given values like so:\n    // ```\n    // format(\"Foo: %{foo}\", {foo: \"bar\"}) // \"Foo bar\"\n    // ```\n    // If you want to write %{...} without having it replaced simply\n    // prefix it with % like this `Foo: %%{foo}` and it will be returned\n    // as `\"Foo: %{foo}\"`\n    format: v.extend(function(str, vals) {\n      return str.replace(v.format.FORMAT_REGEXP, function(m0, m1, m2) {\n        if (m1 === '%') {\n          return \"%{\" + m2 + \"}\";\n        } else {\n          return String(vals[m2]);\n        }\n      });\n    }, {\n      // Finds %{key} style patterns in the given string\n      FORMAT_REGEXP: /(%?)%\\{([^\\}]+)\\}/g\n    }),\n\n    // \"Prettifies\" the given string.\n    // Prettifying means replacing [.\\_-] with spaces as well as splitting\n    // camel case words.\n    prettify: function(str) {\n      if (v.isNumber(str)) {\n        // If there are more than 2 decimals round it to two\n        if ((str * 100) % 1 === 0) {\n          return \"\" + str;\n        } else {\n          return parseFloat(Math.round(str * 100) / 100).toFixed(2);\n        }\n      }\n\n      if (v.isArray(str)) {\n        return str.map(function(s) { return v.prettify(s); }).join(\", \");\n      }\n\n      if (v.isObject(str)) {\n        return str.toString();\n      }\n\n      // Ensure the string is actually a string\n      str = \"\" + str;\n\n      return str\n        // Splits keys separated by periods\n        .replace(/([^\\s])\\.([^\\s])/g, '$1 $2')\n        // Removes backslashes\n        .replace(/\\\\+/g, '')\n        // Replaces - and - with space\n        .replace(/[_-]/g, ' ')\n        // Splits camel cased words\n        .replace(/([a-z])([A-Z])/g, function(m0, m1, m2) {\n          return \"\" + m1 + \" \" + m2.toLowerCase();\n        })\n        .toLowerCase();\n    },\n\n    stringifyValue: function(value) {\n      return v.prettify(value);\n    },\n\n    isString: function(value) {\n      return typeof value === 'string';\n    },\n\n    isArray: function(value) {\n      return {}.toString.call(value) === '[object Array]';\n    },\n\n    contains: function(obj, value) {\n      if (!v.isDefined(obj)) {\n        return false;\n      }\n      if (v.isArray(obj)) {\n        return obj.indexOf(value) !== -1;\n      }\n      return value in obj;\n    },\n\n    forEachKeyInKeypath: function(object, keypath, callback) {\n      if (!v.isString(keypath)) {\n        return undefined;\n      }\n\n      var key = \"\"\n        , i\n        , escape = false;\n\n      for (i = 0; i < keypath.length; ++i) {\n        switch (keypath[i]) {\n          case '.':\n            if (escape) {\n              escape = false;\n              key += '.';\n            } else {\n              object = callback(object, key, false);\n              key = \"\";\n            }\n            break;\n\n          case '\\\\':\n            if (escape) {\n              escape = false;\n              key += '\\\\';\n            } else {\n              escape = true;\n            }\n            break;\n\n          default:\n            escape = false;\n            key += keypath[i];\n            break;\n        }\n      }\n\n      return callback(object, key, true);\n    },\n\n    getDeepObjectValue: function(obj, keypath) {\n      if (!v.isObject(obj)) {\n        return undefined;\n      }\n\n      return v.forEachKeyInKeypath(obj, keypath, function(obj, key) {\n        if (v.isObject(obj)) {\n          return obj[key];\n        }\n      });\n    },\n\n    // This returns an object with all the values of the form.\n    // It uses the input name as key and the value as value\n    // So for example this:\n    // <input type=\"text\" name=\"email\" value=\"foo@bar.com\" />\n    // would return:\n    // {email: \"foo@bar.com\"}\n    collectFormValues: function(form, options) {\n      var values = {}\n        , i\n        , input\n        , inputs\n        , value;\n\n      if (!form) {\n        return values;\n      }\n\n      options = options || {};\n\n      inputs = form.querySelectorAll(\"input[name]\");\n      for (i = 0; i < inputs.length; ++i) {\n        input = inputs.item(i);\n\n        if (v.isDefined(input.getAttribute(\"data-ignored\"))) {\n          continue;\n        }\n\n        value = v.sanitizeFormValue(input.value, options);\n        if (input.type === \"number\") {\n          value = +value;\n        } else if (input.type === \"checkbox\") {\n          if (input.attributes.value) {\n            if (!input.checked) {\n              value = values[input.name] || null;\n            }\n          } else {\n            value = input.checked;\n          }\n        } else if (input.type === \"radio\") {\n          if (!input.checked) {\n            value = values[input.name] || null;\n          }\n        }\n        values[input.name] = value;\n      }\n\n      inputs = form.querySelectorAll(\"select[name]\");\n      for (i = 0; i < inputs.length; ++i) {\n        input = inputs.item(i);\n        value = v.sanitizeFormValue(input.options[input.selectedIndex].value, options);\n        values[input.name] = value;\n      }\n\n      return values;\n    },\n\n    sanitizeFormValue: function(value, options) {\n      if (options.trim && v.isString(value)) {\n        value = value.trim();\n      }\n\n      if (options.nullify !== false && value === \"\") {\n        return null;\n      }\n      return value;\n    },\n\n    capitalize: function(str) {\n      if (!v.isString(str)) {\n        return str;\n      }\n      return str[0].toUpperCase() + str.slice(1);\n    },\n\n    // Remove all errors who's error attribute is empty (null or undefined)\n    // NOTE: REFACTORED\n    pruneEmptyErrors: (errors) =>\n      errors.reject(_.compose(v.isEmpty, _.get('error'))),\n\n    // In\n    // [{error: [\"err1\", \"err2\"], ...}]\n    // Out\n    // [{error: \"err1\", ...}, {error: \"err2\", ...}]\n    //\n    // All attributes in an error with multiple messages are duplicated\n    // when expanding the errors.\n    // NOTE: REFACTORED\n    expandMultipleErrors: (errors) =>\n      errors.flatMap((error) => {\n        if (v.isArray(error.error)) {\n          return error.error.map((msg) => v.extend({}, error, { error: msg }));\n        } else {\n          return error;\n        }\n      }),\n\n    // Converts the error mesages by prepending the attribute name unless the\n    // message is prefixed by ^\n    convertErrorMessages: function(errors, options) {\n      options = options || {};\n\n      var ret = [];\n      errors.forEach(function(errorInfo) {\n        var error = errorInfo.error;\n\n        if (error[0] === '^') {\n          error = error.slice(1);\n        } else if (options.fullMessages !== false) {\n          error = v.capitalize(v.prettify(errorInfo.attribute)) + \" \" + error;\n        }\n        error = error.replace(/\\\\\\^/g, \"^\");\n        error = v.format(error, {value: v.stringifyValue(errorInfo.value)});\n        ret.push(v.extend({}, errorInfo, {error: error}));\n      });\n      return ret;\n    },\n\n    // In:\n    // [{attribute: \"<attributeName>\", ...}]\n    // Out:\n    // {\"<attributeName>\": [{attribute: \"<attributeName>\", ...}]}\n    // NOTE: REFACTORED\n    groupErrorsByAttribute: (errors) =>\n      errors.reduce((hash, error) => {\n        let errorsForAttribute = hash[error.attribute] || [];\n        hash[error.attribute] = errorsForAttribute.concat([error]);\n        return hash;\n      }, {}),\n\n    // In:\n    // [{error: \"<message 1>\", ...}, {error: \"<message 2>\", ...}]\n    // Out:\n    // [\"<message 1>\", \"<message 2>\"]\n    // NOTE: REFACTORED\n    flattenErrorsToArray: (errors) => errors.pluck('error'),\n\n    cleanAttributes: function(attributes, whitelist) {\n      function whitelistCreator(obj, key, last) {\n        if (v.isObject(obj[key])) {\n          return obj[key];\n        }\n        return (obj[key] = last ? true : {});\n      }\n\n      function buildObjectWhitelist(whitelist) {\n        var ow = {}\n          , lastObject\n          , attr;\n        for (attr in whitelist) {\n          if (!whitelist[attr]) {\n            continue;\n          }\n          v.forEachKeyInKeypath(ow, attr, whitelistCreator);\n        }\n        return ow;\n      }\n\n      function cleanRecursive(attributes, whitelist) {\n        if (!v.isObject(attributes)) {\n          return attributes;\n        }\n\n        var ret = v.extend({}, attributes)\n          , w\n          , attribute;\n\n        for (attribute in attributes) {\n          w = whitelist[attribute];\n\n          if (v.isObject(w)) {\n            ret[attribute] = cleanRecursive(ret[attribute], w);\n          } else if (!w) {\n            delete ret[attribute];\n          }\n        }\n        return ret;\n      }\n\n      if (!v.isObject(whitelist) || !v.isObject(attributes)) {\n        return {};\n      }\n\n      whitelist = buildObjectWhitelist(whitelist);\n      return cleanRecursive(attributes, whitelist);\n    },\n\n    exposeModule: function(validate, root, exports, module, define) {\n      if (exports) {\n        if (module && module.exports) {\n          exports = module.exports = validate;\n        }\n        exports.validate = validate;\n      } else {\n        root.validate = validate;\n        if (validate.isFunction(define) && define.amd) {\n          define([], function () { return validate; });\n        }\n      }\n    },\n\n    warn: function(msg) {\n      if (typeof console !== \"undefined\" && console.warn) {\n        console.warn(msg);\n      }\n    },\n\n    error: function(msg) {\n      if (typeof console !== \"undefined\" && console.error) {\n        console.error(msg);\n      }\n    }\n  });\n\n  validate.validators = {\n    // Presence validates that the value isn't empty\n    presence: function(value, options) {\n      options = v.extend({}, this.options, options);\n      if (v.isEmpty(value)) {\n        return options.message || this.message || \"can't be blank\";\n      }\n    },\n    length: function(value, options, attribute) {\n      // Empty values are allowed\n      if (v.isEmpty(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var is = options.is\n        , maximum = options.maximum\n        , minimum = options.minimum\n        , tokenizer = options.tokenizer || function(val) { return val; }\n        , err\n        , errors = [];\n\n      value = tokenizer(value);\n      var length = value.length;\n      if(!v.isNumber(length)) {\n        v.error(v.format(\"Attribute %{attr} has a non numeric value for `length`\", {attr: attribute}));\n        return options.message || this.notValid || \"has an incorrect length\";\n      }\n\n      // Is checks\n      if (v.isNumber(is) && length !== is) {\n        err = options.wrongLength ||\n          this.wrongLength ||\n          \"is the wrong length (should be %{count} characters)\";\n        errors.push(v.format(err, {count: is}));\n      }\n\n      if (v.isNumber(minimum) && length < minimum) {\n        err = options.tooShort ||\n          this.tooShort ||\n          \"is too short (minimum is %{count} characters)\";\n        errors.push(v.format(err, {count: minimum}));\n      }\n\n      if (v.isNumber(maximum) && length > maximum) {\n        err = options.tooLong ||\n          this.tooLong ||\n          \"is too long (maximum is %{count} characters)\";\n        errors.push(v.format(err, {count: maximum}));\n      }\n\n      if (errors.length > 0) {\n        return options.message || errors;\n      }\n    },\n    numericality: function(value, options) {\n      // Empty values are fine\n      if (v.isEmpty(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var errors = []\n        , name\n        , count\n        , checks = {\n            greaterThan:          function(v, c) { return v > c; },\n            greaterThanOrEqualTo: function(v, c) { return v >= c; },\n            equalTo:              function(v, c) { return v === c; },\n            lessThan:             function(v, c) { return v < c; },\n            lessThanOrEqualTo:    function(v, c) { return v <= c; }\n          };\n\n      // Coerce the value to a number unless we're being strict.\n      if (options.noStrings !== true && v.isString(value)) {\n        value = +value;\n      }\n\n      // If it's not a number we shouldn't continue since it will compare it.\n      if (!v.isNumber(value)) {\n        return options.message || this.notValid || \"is not a number\";\n      }\n\n      // Same logic as above, sort of. Don't bother with comparisons if this\n      // doesn't pass.\n      if (options.onlyInteger && !v.isInteger(value)) {\n        return options.message || this.notInteger  || \"must be an integer\";\n      }\n\n      for (name in checks) {\n        count = options[name];\n        if (v.isNumber(count) && !checks[name](value, count)) {\n          // This picks the default message if specified\n          // For example the greaterThan check uses the message from\n          // this.notGreaterThan so we capitalize the name and prepend \"not\"\n          var msg = this[\"not\" + v.capitalize(name)] ||\n            \"must be %{type} %{count}\";\n\n          errors.push(v.format(msg, {\n            count: count,\n            type: v.prettify(name)\n          }));\n        }\n      }\n\n      if (options.odd && value % 2 !== 1) {\n        errors.push(this.notOdd || \"must be odd\");\n      }\n      if (options.even && value % 2 !== 0) {\n        errors.push(this.notEven || \"must be even\");\n      }\n\n      if (errors.length) {\n        return options.message || errors;\n      }\n    },\n    datetime: v.extend(function(value, options) {\n      // Empty values are fine\n      if (v.isEmpty(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var err\n        , errors = []\n        , earliest = options.earliest ? this.parse(options.earliest, options) : NaN\n        , latest = options.latest ? this.parse(options.latest, options) : NaN;\n\n      value = this.parse(value, options);\n\n      // 86400000 is the number of seconds in a day, this is used to remove\n      // the time from the date\n      if (isNaN(value) || options.dateOnly && value % 86400000 !== 0) {\n        return options.message || this.notValid || \"must be a valid date\";\n      }\n\n      if (!isNaN(earliest) && value < earliest) {\n        err = this.tooEarly || \"must be no earlier than %{date}\";\n        err = v.format(err, {date: this.format(earliest, options)});\n        errors.push(err);\n      }\n\n      if (!isNaN(latest) && value > latest) {\n        err = this.tooLate || \"must be no later than %{date}\";\n        err = v.format(err, {date: this.format(latest, options)});\n        errors.push(err);\n      }\n\n      if (errors.length) {\n        return options.message || errors;\n      }\n    }, {\n      // This is the function that will be used to convert input to the number\n      // of millis since the epoch.\n      // It should return NaN if it's not a valid date.\n      parse: function(value, options) {\n        if (v.isFunction(v.XDate)) {\n          return new v.XDate(value, true).getTime();\n        }\n\n        if (v.isDefined(v.moment)) {\n          return +v.moment.utc(value);\n        }\n\n        throw new Error(\"Neither XDate or moment.js was found\");\n      },\n      // Formats the given timestamp. Uses ISO8601 to format them.\n      // If options.dateOnly is true then only the year, month and day will be\n      // output.\n      format: function(date, options) {\n        var format = options.dateFormat;\n\n        if (v.isFunction(v.XDate)) {\n          format = format || (options.dateOnly ? \"yyyy-MM-dd\" : \"yyyy-MM-dd HH:mm:ss\");\n          return new XDate(date, true).toString(format);\n        }\n\n        if (v.isDefined(v.moment)) {\n          format = format || (options.dateOnly ? \"YYYY-MM-DD\" : \"YYYY-MM-DD HH:mm:ss\");\n          return v.moment.utc(date).format(format);\n        }\n\n        throw new Error(\"Neither XDate or moment.js was found\");\n      }\n    }),\n    date: function(value, options) {\n      options = v.extend({}, options, {dateOnly: true});\n      return v.validators.datetime.call(v.validators.datetime, value, options);\n    },\n    format: function(value, options) {\n      if (v.isString(options) || (options instanceof RegExp)) {\n        options = {pattern: options};\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var message = options.message || this.message || \"is invalid\"\n        , pattern = options.pattern\n        , match;\n\n      // Empty values are allowed\n      if (v.isEmpty(value)) {\n        return;\n      }\n      if (!v.isString(value)) {\n        return message;\n      }\n\n      if (v.isString(pattern)) {\n        pattern = new RegExp(options.pattern, options.flags);\n      }\n      match = pattern.exec(value);\n      if (!match || match[0].length != value.length) {\n        return message;\n      }\n    },\n    inclusion: function(value, options) {\n      // Empty values are fine\n      if (v.isEmpty(value)) {\n        return;\n      }\n      if (v.isArray(options)) {\n        options = {within: options};\n      }\n      options = v.extend({}, this.options, options);\n      if (v.contains(options.within, value)) {\n        return;\n      }\n      var message = options.message ||\n        this.message ||\n        \"^%{value} is not included in the list\";\n      return v.format(message, {value: value});\n    },\n    exclusion: function(value, options) {\n      // Empty values are fine\n      if (v.isEmpty(value)) {\n        return;\n      }\n      if (v.isArray(options)) {\n        options = {within: options};\n      }\n      options = v.extend({}, this.options, options);\n      if (!v.contains(options.within, value)) {\n        return;\n      }\n      var message = options.message || this.message || \"^%{value} is restricted\";\n      return v.format(message, {value: value});\n    },\n    email: v.extend(function(value, options) {\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is not a valid email\";\n      // Empty values are fine\n      if (v.isEmpty(value)) {\n        return;\n      }\n      if (!v.isString(value)) {\n        return message;\n      }\n      if (!this.PATTERN.exec(value)) {\n        return message;\n      }\n    }, {\n      PATTERN: /^[a-z0-9\\u007F-\\uffff!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9\\u007F-\\uffff!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z]{2,}$/i\n    }),\n    equality: function(value, options, attribute, attributes) {\n      if (v.isEmpty(value)) {\n        return;\n      }\n\n      if (v.isString(options)) {\n        options = {attribute: options};\n      }\n      options = v.extend({}, this.options, options);\n      var message = options.message ||\n        this.message ||\n        \"is not equal to %{attribute}\";\n\n      if (v.isEmpty(options.attribute) || !v.isString(options.attribute)) {\n        throw new Error(\"The attribute must be a non empty string\");\n      }\n\n      var otherValue = v.getDeepObjectValue(attributes, options.attribute)\n        , comparator = options.comparator || function(v1, v2) {\n          return v1 === v2;\n        };\n\n      if (!comparator(value, otherValue, options, attribute, attributes)) {\n        return v.format(message, {attribute: v.prettify(options.attribute)});\n      }\n    }\n  };\n\n  validate.exposeModule(validate, this, exports, module, define);\n}).call(this,\n        typeof exports !== 'undefined' ? /* istanbul ignore next */ exports : null,\n        typeof module !== 'undefined' ? /* istanbul ignore next */ module : null,\n        typeof define !== 'undefined' ? /* istanbul ignore next */ define : null);\n"]}